<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Link', 'doctrine');

/**
 * BaseLink
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $url
 * @property integer $episode
 * @property Episode $Episode
 * 
 * @method integer getId()      Returns the current record's "id" value
 * @method string  getUrl()     Returns the current record's "url" value
 * @method integer getEpisode() Returns the current record's "episode" value
 * @method Episode getEpisode() Returns the current record's "Episode" value
 * @method Link    setId()      Sets the current record's "id" value
 * @method Link    setUrl()     Sets the current record's "url" value
 * @method Link    setEpisode() Sets the current record's "episode" value
 * @method Link    setEpisode() Sets the current record's "Episode" value
 * 
 * @package    serialkiller
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLink extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('link');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('url', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('episode', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Episode', array(
             'local' => 'episode',
             'foreign' => 'id'));
    }
}